#!/usr/bin/env python
#
# get Lightning Network Node infos (lnd)

########################################
# TODO
# - no sudo admin
# change user in line 15, if needed
########################################

import subprocess, json

print "<<<lnd_info>>>"

bashCommand = 'sudo -u admin lncli getinfo'
process = subprocess.Popen(bashCommand.split(), stdout=subprocess.PIPE)
info, info_error = process.communicate()

if info_error == None:
    info_dict = json.loads(info)
    for key, value in info_dict.iteritems():
        print key, value
else:
    print "Error %s in getinfo command" % info_error

# lncli version

bashCommand = 'sudo -u admin lncli --version'
process = subprocess.Popen(bashCommand.split(), stdout=subprocess.PIPE)
info, info_error = process.communicate()

if info_error == None:
    version = ''.join(info).split(" ")
    print "version", version[2]
else:
    print "Error %s in getinfo command" % info_error

# walletbalance

print "<<<lnd_balance>>>"

bashCommand = 'sudo -u admin lncli walletbalance'
process = subprocess.Popen(bashCommand.split(), stdout=subprocess.PIPE)
info, info_error = process.communicate()

if info_error == None:
    info_dict = json.loads(info)
    for key, value in info_dict.iteritems():
        print key, value
else:
    print "Error %s in getinfo command" % info_error

# getnetworkinfo

print "<<<lnd_network>>>"

bashCommand = 'sudo -u admin lncli getnetworkinfo'
process = subprocess.Popen(bashCommand.split(), stdout=subprocess.PIPE)
info, info_error = process.communicate()

if info_error == None:
    info_dict = json.loads(info)
    for key, value in info_dict.iteritems():
        print key, value
else:
    print "Error %s in getinfo command" % info_error
